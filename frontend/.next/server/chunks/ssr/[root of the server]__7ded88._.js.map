{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Adindu%20Chizzy/Downloads/GoSellar/frontend/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Adindu%20Chizzy/Downloads/GoSellar/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  login: (userData: { id: string }) => void; // Adjusted to include user data\r\n  logout: () => void;\r\n  user?: { id: string }; // Add user property to context type\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState<{ id: string } | undefined>(undefined); // Define user state\r\n\r\n  const login = (userData: { id: string }) => {\r\n    setIsAuthenticated(true);\r\n    setUser(userData); // Store user data in context\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsAuthenticated(false);\r\n    setUser(undefined); // Clear user data on logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout, user }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAAA;;;AASA,MAAM,4BAAc,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAwD,CAAC,EACpE,QAAQ,EACT;IACC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAA8B,YAAY,oBAAoB;IAE7F,MAAM,QAAQ,CAAC;QACb,mBAAmB;QACnB,QAAQ,WAAW,6BAA6B;IAClD;IAEA,MAAM,SAAS;QACb,mBAAmB;QACnB,QAAQ,YAAY,4BAA4B;IAClD;IAEA,qBACE,qKAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAiB;YAAO;YAAQ;QAAK;kBACjE;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Adindu%20Chizzy/Downloads/GoSellar/frontend/src/contexts/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\ninterface CartItem {\r\n  id: string;\r\n  name: string;\r\n  quantity: number;\r\n}\r\n\r\ninterface CartContextType {\r\n  cartItems: CartItem[];\r\n  addToCart: (product: CartItem) => void;\r\n}\r\n\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\nexport const CartProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\r\n\r\n  const addToCart = (product: CartItem) => {\r\n    setCartItems((prev) => {\r\n      const existingProduct = prev.find((item) => item.id === product.id);\r\n\r\n      if (existingProduct) {\r\n        return prev.map((item) =>\r\n          item.id === product.id ? { ...item, quantity: item.quantity + product.quantity } : item\r\n        );\r\n      } else {\r\n        return [...prev, product];\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error(\"useCart must be used within a CartProvider\");\r\n  }\r\n  return context;\r\n};"],"names":[],"mappings":";;;;;AAAA;;;AAaA,MAAM,4BAAc,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAChF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAEzD,MAAM,YAAY,CAAC;QACjB,aAAa,CAAC;YACZ,MAAM,kBAAkB,KAAK,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK,QAAQ,EAAE;YAElE,IAAI,iBAAiB;gBACnB,OAAO,KAAK,GAAG,CAAC,CAAC,OACf,KAAK,EAAE,KAAK,QAAQ,EAAE,GAAG;wBAAE,GAAG,IAAI;wBAAE,UAAU,KAAK,QAAQ,GAAG,QAAQ,QAAQ;oBAAC,IAAI;YAEvF,OAAO;gBACL,OAAO;uBAAI;oBAAM;iBAAQ;YAC3B;QACF;IACF;IAEA,qBACE,qKAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAW;QAAU;kBACjD;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Adindu%20Chizzy/Downloads/GoSellar/frontend/src/pages/_app.tsx"],"sourcesContent":["import '../styles/globals.css';\nimport type { AppProps } from 'next/app';\nimport { AuthProvider } from '../contexts/AuthContext'; // Import AuthProvider\nimport { CartProvider } from '../contexts/CartContext'; // Import CartProvider\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  return (\n    <AuthProvider>\n      <CartProvider>\n        <Component {...pageProps} />\n      </CartProvider>\n    </AuthProvider>\n  );\n}\n\nexport default MyApp;\n"],"names":[],"mappings":";;;;AAEA,kNAAwD,sBAAsB;AAC9E,kNAAwD,sBAAsB;;;;;AAE9E,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAY;IAC/C,qBACE,qKAAC,wHAAA,CAAA,eAAY;kBACX,cAAA,qKAAC,wHAAA,CAAA,eAAY;sBACX,cAAA,qKAAC;gBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;AAIhC;uCAEe"}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Adindu%20Chizzy/Downloads/GoSellar/frontend/src/pages/store-view/inventory.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Modal,\r\n  TextField,\r\n  Container,\r\n} from \"@mui/material\";\r\nimport Image from \"next/image\"; // Importing Image from Next.js\r\nimport Layout from \"'components/Layout'\";\r\n\r\ntype Product = {\r\n  id: number;\r\n  name: string;\r\n  status: string;\r\n  price: number;\r\n  image: string;\r\n  description: string; // Added description property\r\n};\r\n\r\nconst Inventory = () => {\r\n  const [products, setProducts] = useState<Product[]>([]); // State to hold product data\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null); // State to hold the product being edited\r\n  const [openModal, setOpenModal] = useState(false); // State to control modal visibility\r\n  const [userID, setUserID] = useState<string | null>(null); // Define state for user ID\r\n  const [loading, setLoading] = useState<boolean>(true); // Define loading state\r\n  const [error, setError] = useState<string | null>(null); // Define error state\r\n\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem(\"userId\"); // Retrieve vendor ID\r\n    setUserID(userId); // Set the user ID in state\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchStoreProducts = async () => {\r\n      if (!userID) return; // Skip if userID is not available\r\n\r\n      try {\r\n        console.log(\"Fetching products for vendor ID:\", userID); // Log the user ID being used for fetching\r\n        const response = await fetch(\r\n          `http://localhost:9000/api/product?vendorId=${userID}`\r\n        ); // Fetch user profile data/products?vendorId=67a7ad3a9258bf614b5c632b\r\n        console.log(\"Product response\", response);\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        const data = await response.json();\r\n        console.log(\"Product data\", data); // Log the fetched product data\r\n        setProducts(data); // Set the store data\r\n      } catch (error) {\r\n        setError(error instanceof Error ? error.message : \"An error occurred\"); // Set error message\r\n      } finally {\r\n        setLoading(false); // Set loading to false after fetch\r\n      }\r\n    };\r\n\r\n    fetchStoreProducts();\r\n  }, [userID]); // Run this effect when userID changes\r\n\r\n  const handleEdit = (product: Product) => {\r\n    setSelectedProduct(product);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleDelete = (productId: number) => {\r\n    // Logic to delete the product\r\n    setProducts(products.filter((product) => product.id !== productId));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Logic to save the edited product\r\n    setOpenModal(false);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Box className=\"min-h-screen\">\r\n        <Container maxWidth={\"xl\"}>\r\n          <Box className=\"h-[700px] mt-10 mb-10\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <h1 className=\"text-3xl font-bold mb-4\">Inventory</h1>\r\n            )}\r\n\r\n            {error && <p className=\"text-red-500\">{error}</p>}\r\n            <TableContainer className=\"mt-5 p-5 border border-[#ccccc]\">\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell className=\"font-semibold text-[15px]\">\r\n                      Name\r\n                    </TableCell>\r\n                    <TableCell className=\"font-semibold text-[15px]\">\r\n                      Status\r\n                    </TableCell>\r\n                    <TableCell className=\"font-semibold text-[15px]\">\r\n                      Price\r\n                    </TableCell>\r\n                    <TableCell className=\"font-semibold text-[15px]\">\r\n                      Actions\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {products.map((product) => (\r\n                    <TableRow key={product.id as number}>\r\n                      <TableCell>\r\n                        <Image\r\n                          src={product.image} // Update to Cloudinary URL\r\n                          alt={product.name}\r\n                          width={50}\r\n                          height={50}\r\n                        />\r\n                        {product.name as string}\r\n                      </TableCell>\r\n                      <TableCell>{product.status as string}</TableCell>\r\n                      <TableCell>{product.price as number}</TableCell>\r\n\r\n                      <TableCell>\r\n                        <Button onClick={() => handleEdit(product)}>\r\n                          Edit\r\n                        </Button>\r\n                        <Button\r\n                          onClick={() => handleDelete(product.id as number)}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n\r\n            <Modal open={openModal} onClose={() => setOpenModal(false)}>\r\n              <Container className=\"flex items-center justify-center w-full h-full\">\r\n                <Box sx={{ padding: 2 }} className=\"bg-white w-[500px] flex flex-col gap-8\">\r\n                  <h2 className=\"font-bold text-2xl\">Edit Product</h2>\r\n                  <div className=\"flex flex-col gap-5\">\r\n                    <TextField\r\n                      label=\"Name\"\r\n                      value={selectedProduct?.name || \"\"}\r\n                      onChange={(e) =>\r\n                        setSelectedProduct({\r\n                          ...(selectedProduct as Product),\r\n                          name: e.target.value,\r\n                        })\r\n                      }\r\n                    />\r\n                    <TextField\r\n                      label=\"Description\"\r\n                      value={selectedProduct?.description || \"\"}\r\n                      onChange={(e) =>\r\n                        setSelectedProduct({\r\n                          ...(selectedProduct as Product),\r\n                          description: e.target.value,\r\n                        })\r\n                      }\r\n                    />\r\n\r\n                    <TextField\r\n                      label=\"Price\"\r\n                      value={selectedProduct?.price || \"\"}\r\n                      onChange={(e) =>\r\n                        setSelectedProduct({\r\n                          ...(selectedProduct as Product),\r\n                          price: Number(e.target.value),\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <Button className=\"bg-[#00670c] text-white p-3\" onClick={handleSave}>Save</Button>\r\n                </Box>\r\n              </Container>\r\n            </Modal>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}